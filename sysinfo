#! /bin/bash

# sysinfo — console util to show concise system info for Linux arch/distro
#
# Author:  Micah Elliott http://MicahElliott.com
# License: WTFPL http://sam.zoy.org/wtfpl/
# Date:    2012
#
# This should work on distros based on Arch, Debian, SuSE, and Redhat.
#
# This is a recipe for quickly showing the most pertinent
# info for your systems. It was originally deployed in a compiler test
# lab to be used on 50+ diverse machines.
#
# The info shown is particularly useful for working with compilers
# (gcc, glibc, etc), but you may want to tune it for whatever common
# tools you work with (ruby/python/perl versions, etc). It’s also
# handy for generating consistent bug reports.
#
# For Ubuntu you may have to install something like ‘libpam-modules’
# to get motd going. We had a convention of putting a specific
# one-line status message into our MOTDs, and this parsed that out, so
# is likely not too useful unless you adopt a similar convention.
# Anyway, it’s a nice approach when using many systems.
#
# Note that there is also an apt-installable GUI tool called sysinfo,
# but I think I devised this first so I’ll keep the name. ☻
#
# Much more could be done with this Python library if you want to take
# the concepts here and apply to more OSes:
# http://downloads.egenix.com/python/platform.py

trim() {
   local trimres=$(echo $1 |sed "s/^ \+//")
}

name=$(hostname)
#glibc=$(rpm -q glibc|uniq)
glibc=$(ls /lib/libc-*.so |head -1 |sed -e 's/.*-//' -e 's/\.so$//')
gcc=$(gcc --version |head -1)
kernel=$(uname -r)
arch=$(uname -m)
#distro=$(for f in /etc/{redhat,SuSE}-release; do test -f $f && head -1 $f; done)
distro=$(lsb_release -i |awk '{print $3}')
release=$(lsb_release -r |awk '{print $2}')
codename=$(lsb_release -c |awk '{print $2}')
freemem=$(free -m |grep Mem |tr -s ' ' |cut -d' ' -f2)
freeswap=$(free -m |grep Swap |tr -s ' ' |cut -d' ' -f2)
trim $(cat /etc/motd |grep "^$(hostname)" |cut -d'-' -f3)
msg=$trimres

test $arch = "ia64" && {
   vendor=$(grep '^vendor' /proc/cpuinfo |uniq |cut -d: -f2)
   fam=$(grep '^family' /proc/cpuinfo |uniq |cut -d: -f2)
   mhz=$(grep '^cpu MHz' /proc/cpuinfo |uniq |cut -d: -f2)
   proc="$vendor$fam$mhz"
   nprocs=$(grep '^processor' /proc/cpuinfo |wc -l |tr -s ' ')
   cache=$(grep 'Size' /proc/pal/cpu0/cache_info |tail -1 |cut -d: -f2)
} || {
   proc=$(grep "model name" /proc/cpuinfo |uniq |cut -d: -f2 |tr -s ' ')
   nprocs=$(grep processor /proc/cpuinfo |wc -l |tr -d ' ' |tr -s ' ')
   cache=$(awk '/^cache/ {print $4}' /proc/cpuinfo |head -1)
}

echo "hostname:     $name"
echo "distro:       $distro"
echo "release:      $release"
echo "codename:     $codename"
echo "glibc:        $glibc"
echo "gcc:          $gcc"
echo "kernel:       $kernel"
echo "architecture: $arch"
echo "processors:  $proc (x$nprocs)"
echo "cache:        $cache KB"
echo "ram:          $freemem MB"
echo "swap:         $freeswap MB"
#test -n "$msg" && echo "Message:       $msg"
