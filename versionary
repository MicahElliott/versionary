#! /bin/bash

# versionary â€” console util to show concise system info for Linux arch/distro
#
# Author:  Micah Elliott http://MicahElliott.com
# License: WTFPL

# To add:
#
# * An envar like SYSINFO_RUNTIMES=ruby,python,java to enable
#   selectivelyshowing versions
#
# * Put everything into hash instead of mess of params
#
# * Color: red for missing tools, purple for non-semver-compliant
#
# * Option for JSON output
#
# * New tools: coffee, lsc, npm, chef, puppet, dart, vim, emacs, riak, neo4j
#
# * Might also be nice to indicate what key services are running (systemctl).
#
# * Could check envars to print things like EDITOR, SHELL, DE, TERM, LANG,
#   USER, PAGER, CLASSPATH, GEMPATH, RUBYLIB, etc.
#
# * Could do client tools, like chrome, firefox, etc, but probably too many.

s() { sed -r "$@" ; }
trim() { local trimres=$(echo $1 |sed "s/^ \+//"); }
w() { /usr/bin/which $1 >/dev/null 2>&1; }

# http://stackoverflow.com/questions/2937407/test-whether-a-glob-has-any-matches-in-bash
if stat -t /lib/libc-*.so >/dev/null 2>&1; then
  glibc=$(echo /lib/libc-*.so |head -1 |sed -e 's/.*-//' -e 's/\.so$//')
else
  glibc="none"
fi

name=$(hostname)
kernel=$(uname -r)
arch=$(uname -m)
#distro=$(for f in /etc/{redhat,SuSE}-release; do test -f $f && head -1 $f; done)
distro=$(lsb_release -i |awk '{print $3}')
release=$(lsb_release -r |awk '{print $2}')
codename=$(lsb_release -c |awk '{print $2}')
freemem=$(free -m |grep Mem |tr -s ' ' |cut -d' ' -f2)
freeswap=$(free -m |grep Swap |tr -s ' ' |cut -d' ' -f2)
trim $(cat /etc/motd |grep "^$(hostname)" |cut -d'-' -f3)
msg=$trimres

# Shells
vbash=$( w bash && bash --version |& head -1 |awk '{print $4}' || echo "none" )
vzsh=$(  w zsh &&  zsh --version  |& awk '{print $2}'          || echo "none" )

# Compilers
vgcc=$(    w gcc &&    gcc --version   |& head -1 |awk '{print $3}'     || echo "none" )
vjava=$(   w java &&   java -version   |& sed -rn 's/.*"(.*)".*/\1/;1p' || echo "none" )
vruby=$(   w ruby &&   ruby -v         |& awk '{print $2}'              || echo "none" )
vpython=$( w python && python -V       |& awk '{print $2}'              || echo "none" )
vnode=$(   w node &&   node --version  |& s 's/^v//'                    || echo "none" )
vlua=$(    w lua &&    lua -v 2>&1     |& awk '{print $2}'              || echo "none" )
# What a monster!
vghc=$(    w ghc &&    ghc --version                                    || echo "none" )
# Other monsters include: ocaml, racket
verl=$(    w erl &&    erl -version    |& s 's/.* //'                   || echo "none" )
vcoffee=$( w coffee && coffee -v       |& s 's/.* //'                   || echo "none" )
vperl=$(   w perl &&   perl -v 2>&1 |sed -rn 's/.*(v[0-9.]+).*/\1/;2p'  || echo "none")
vphp=$(    w php &&    php --version   |& head -1 |awk '{print $2}'     || echo "none" )
vclisp=$(  w clisp &&  clisp --version |head -1 |awk '{print $3}'       || echo "none" )
vr=$(      w R &&      R --version     |head -1 |awk '{print $3}'       || echo "none" )
# Too slow
#vscala=$(  w scalac && scalac -version |& sed -r 's/.*([0-9]+\.[0-9]\.[0-9]).*/\1/'|| echo "none" )
# Not including clojure since every project uses a different local version from .m2.

# Databases
vmysql=$(  w mysql &&   mysql --version   |& awk '{print $3}'           || echo "none" )
vpsql=$(   w psql  &&   psql --version    |& sed -nr 's/.* //;1p'       || echo "none" )
vsqlite=$( w sqlite3 && sqlite3 --version |& tail -1 |sed -r 's/ .*?//' || echo "none" )

vmongodb=$( w mongo &&     mongo --version     |awk '{print $4}' || echo "none" )
vcouchdb=$( w couchdb &&   couchdb -V |head -1 |sed -r 's/.* //' || echo "none" )
vredis=$(   w redis-cli && redis-cli --version |awk '{print $2}' || echo "none" )

# Services
vapache=$( w apachectl && apachectl -version |& sed -rn 's/.*\/(.*) .*/\1/;1p' || echo "none" )
vnginx=$(  w nginx &&     nginx -v |& sed -r 's/.*\///' || echo "none" )

# Other tools
vgit=$( w git && git --version |awk '{print $3}' || echo "none" )
vhg=$(  w hg &&  hg --version  |head -1 |sed -r -e 's/\)//' -e 's/.* //' || echo "none" )

vvim=$( w vim && vim --version |sed -rn 's/.*proved ([0-9.]+) .*/\1/;1p' || echo "none" )

# Itanium is probably dead.
test $arch = "ia64" && {
   vendor=$(grep '^vendor' /proc/cpuinfo |uniq |cut -d: -f2)
   fam=$(grep '^family' /proc/cpuinfo |uniq |cut -d: -f2)
   mhz=$(grep '^cpu MHz' /proc/cpuinfo |uniq |cut -d: -f2)
   proc="$vendor$fam$mhz"
   nprocs=$(grep '^processor' /proc/cpuinfo |wc -l |tr -s ' ')
   cache=$(grep 'Size' /proc/pal/cpu0/cache_info |tail -1 |cut -d: -f2)
} || {
   proc=$(grep "model name" /proc/cpuinfo |uniq |cut -d: -f2 |tr -s ' ')
   nprocs=$(grep processor /proc/cpuinfo |wc -l |tr -d ' ' |tr -s ' ')
   cache=$(awk '/^cache/ {print $4}' /proc/cpuinfo |head -1)
}

echo "hostname: $name"
echo "distro:   $distro"
echo "release:  $release"
echo "codename: $codename"
echo "kernel:   $kernel"
echo "arch:     $arch"
echo "glibc:    $glibc"
echo "procs:   $proc (x$nprocs)"
echo "cache:    $cache KB"
echo "ram:      $freemem MB"
echo "swap:     $freeswap MB"
echo "bash:     $vbash"
echo "zsh:      $vzsh"
echo "gcc:      $vgcc"
echo "java:     $vjava"
echo "python:   $vpython"
echo "ruby:     $vruby"
echo "perl:     $vperl"
echo "erlang:   $verl"
echo "php:      $vphp"
echo "node:     $vnode"
echo "lua:      $vlua"
#echo "scala:    $vscala"
#echo "clojure:  $vclojure"
echo "haskell:  $vghc"
echo "clisp:    $vclisp"
echo "r:        $vr"
echo "mysql:    $vmysql"
echo "postgres: $vpsql"
echo "sqlite:   $vsqlite"
echo "mongodb:  $vmongodb"
echo "couchdb:  $vcouchdb"
echo "redis:    $vredis"
echo "apache:   $vapache"
echo "nginx:    $vnginx"
echo "git:      $vgit"
echo "hg:       $vhg"
echo "vim:      $vvim"

# JSON/CSON:
#
# {
#   info:
#     hostname: "ario"
#     distro: "arch"
#     arch: "x86_64"
#     ...
#   versions:
#     node: 0.8.16
#     zsh: 5.0.2
#     ...
# }
